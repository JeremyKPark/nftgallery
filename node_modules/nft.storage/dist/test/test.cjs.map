{"version":3,"file":"test.cjs","sources":["../../test/test.js"],"sourcesContent":["import { activate, deactivate } from './mock-server.js'\nimport { init, handle } from './service.js'\nimport { spawn } from 'child_process'\n\nconst main = async () => {\n  const [, , command, ...args] = process.argv\n  const AUTH_TOKEN = Math.random().toString(32).slice(2)\n\n  const service = await activate(init(AUTH_TOKEN), handle)\n\n  console.log(`Mock service running on: ${service.url}`)\n\n  const test = spawn(`${command}`, args, {\n    stdio: 'inherit',\n    env: {\n      ...process.env,\n      AUTH_TOKEN,\n      SERVICE_ENDPOINT: `${service.url}`,\n    },\n  })\n\n  const code = await new Promise((resolve) =>\n    test.once('exit', (code) => resolve(code))\n  )\n\n  deactivate(service)\n  process.exit(code)\n}\n\nmain()\n"],"names":["service","activate","init","handle","spawn","deactivate"],"mappings":";;;;;;AAIA,MAAM,IAAI,GAAG,YAAY;AACzB,EAAE,MAAM,KAAK,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC,KAAI;AAC7C,EAAE,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC;AACxD;AACA,EAAE,MAAMA,SAAO,GAAG,MAAMC,mBAAQ,CAACC,YAAI,CAAC,UAAU,CAAC,EAAEC,cAAM,EAAC;AAC1D;AACA,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,yBAAyB,EAAEH,SAAO,CAAC,GAAG,CAAC,CAAC,EAAC;AACxD;AACA,EAAE,MAAM,IAAI,GAAGI,mBAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE;AACzC,IAAI,KAAK,EAAE,SAAS;AACpB,IAAI,GAAG,EAAE;AACT,MAAM,GAAG,OAAO,CAAC,GAAG;AACpB,MAAM,UAAU;AAChB,MAAM,gBAAgB,EAAE,CAAC,EAAEJ,SAAO,CAAC,GAAG,CAAC,CAAC;AACxC,KAAK;AACL,GAAG,EAAC;AACJ;AACA,EAAE,MAAM,IAAI,GAAG,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO;AACzC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,IAAG;AACH;AACA,EAAEK,qBAAU,CAACL,SAAO,EAAC;AACrB,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAC;AACpB,EAAC;AACD;AACA,IAAI"}