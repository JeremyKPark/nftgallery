{"version":3,"file":"lib.spec.cjs","sources":["../../test/lib.spec.js"],"sourcesContent":["import * as assert from 'uvu/assert'\nimport { NFTStorage, Blob, File } from 'nft.storage'\n\ndescribe('client', () => {\n  const { AUTH_TOKEN, SERVICE_ENDPOINT } = process.env\n  const token = AUTH_TOKEN || ''\n  const endpoint = new URL(SERVICE_ENDPOINT || '')\n\n  it('interface', () => {\n    assert.equal(typeof NFTStorage, 'function')\n    const client = new NFTStorage({ token: 'secret' })\n    assert.ok(client instanceof NFTStorage)\n    assert.equal(typeof client.storeBlob, 'function')\n    assert.equal(typeof client.storeDirectory, 'function')\n    assert.equal(typeof client.status, 'function')\n    assert.equal(typeof client.delete, 'function')\n\n    assert.equal(typeof NFTStorage.storeBlob, 'function')\n    assert.equal(typeof NFTStorage.storeDirectory, 'function')\n    assert.equal(typeof NFTStorage.status, 'function')\n    assert.equal(typeof NFTStorage.delete, 'function')\n  })\n  describe('upload', () => {\n    it('upload blob', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeBlob(new Blob(['hello world']))\n      assert.equal(cid, 'Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD')\n    })\n\n    it('can upload twice', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const blob = new Blob(['upload twice'])\n      const cid1 = await client.storeBlob(blob)\n      const status1 = await client.status(cid1)\n\n      const cid2 = await client.storeBlob(blob)\n      const status2 = await client.status(cid2)\n\n      assert.equal(cid1, cid2, 'cids match')\n      assert.equal(status1.created, status2.created, 'dates match')\n    })\n  })\n\n  describe('upload dir', () => {\n    it('upload a file', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeDirectory([\n        new File(['hello world'], 'hello.txt'),\n      ])\n\n      assert.equal(cid, 'QmNxvA5bwvPGgMXbmtyhxA1cKFdvQXnsGnZLCGor3AzYxJ')\n    })\n\n    it('upload multiple files', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeDirectory([\n        new File(['hello world'], 'hello.txt'),\n        new File(\n          [JSON.stringify({ from: 'incognito' }, null, 2)],\n          'metadata.json'\n        ),\n      ])\n\n      assert.equal(cid, 'QmQAE2tjfwYYmEFFEEnfr12CWikMqgwwtq5gqfyb62bJpw')\n    })\n  })\n\n  describe('status', () => {\n    const client = new NFTStorage({ token, endpoint })\n\n    /** @type {string[]} */\n    let preloaded\n    beforeEach(async () => {\n      preloaded = [\n        // QmaCxv35MgHdAD2K9Tn8xrKVZJw7dauYi4V1GmkQRNYbvP\n        await client.storeBlob(new Blob(['preload status'])),\n        // QmTPFUEcZvqKBYqJM3itqkDiqJaApYzLJ1ht6iBD4d6M28\n        // await client.storeBlob(new Blob(['missing']))\n      ]\n    })\n\n    afterEach(async () => {\n      await Promise.all(preloaded.map((cid) => client.delete(cid)))\n    })\n\n    it('found', async () => {\n      const cid = 'QmaCxv35MgHdAD2K9Tn8xrKVZJw7dauYi4V1GmkQRNYbvP'\n      const status = await client.status(cid)\n      assert.equal(status.cid, cid)\n    })\n\n    it('not found', async () => {\n      const cid = 'QmTPFUEcZvqKBYqJM3itqkDiqJaApYzLJ1ht6iBD4d6M28'\n      try {\n        await client.status(cid)\n        assert.unreachable('Expected to fail')\n      } catch (error) {\n        assert.ok(error.message.match(/not found/))\n      }\n    })\n  })\n\n  describe('delete', () => {\n    it('ok to delete unknown', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = 'Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD'\n      const result = await client.delete(cid)\n      assert.equal(result, undefined)\n    })\n\n    it('gone after delete', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeBlob(new Blob(['to be deleted']))\n      await client.status(cid)\n      await client.delete(cid)\n      try {\n        await client.status(cid)\n        assert.unreachable('should be gone')\n      } catch (error) {\n        assert.ok(error.message.includes('not found'))\n      }\n    })\n  })\n})\n"],"names":["assert.equal","NFTStorage","assert.ok","Blob","File","assert.unreachable"],"mappings":"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"}