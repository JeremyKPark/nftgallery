{"version":3,"file":"service.cjs","sources":["../../test/service.js"],"sourcesContent":["import { CID } from 'multiformats'\nimport { importBlob, importDirectory } from './importer.js'\nimport { Response, Request } from './mock-server.js'\n/**\n * @param {Request} request\n */\nconst headers = ({ headers }) => ({\n  'Access-Control-Allow-Origin': headers.get('origin') || '*',\n  'Access-Control-Allow-Methods': 'GET,POST,DELETE,OPTIONS',\n  // Allow all future content Request headers to go back to browser\n  // such as Authorization (Bearer) or X-Client-Name-Version\n  'Access-Control-Allow-Headers':\n    headers.get('Access-Control-Request-Headers') || '',\n  'Content-Type': 'application/json;charset=UTF-8',\n})\n\n/**\n * @param {Request} request\n */\nconst importUpload = async (request) => {\n  const contentType = request.headers.get('content-type') || ''\n  if (contentType.includes('multipart/form-data')) {\n    const data = await request.formData()\n    const files = /** @type {File[]} */ (data.getAll('file'))\n    return await importDirectory(files)\n  } else {\n    const content = await request.arrayBuffer()\n    return await importBlob(new Uint8Array(content))\n  }\n}\n\n/**\n * @typedef {{AUTH_TOKEN:string, store: Map<string, any>}} State\n * @returns {State}\n */\nexport const init = (token = Math.random().toString(32).slice(2)) => ({\n  AUTH_TOKEN: token,\n  store: new Map(),\n})\n\n/**\n * @param {Request} request\n * @param {State} state\n */\nexport const handle = async (request, { store, AUTH_TOKEN }) => {\n  const url = new URL(request.url)\n\n  const [_, api, param] = url.pathname.split('/')\n  const auth = request.headers.get('authorization')\n  const [, token] = (auth && auth.match(/Bearer (.+)/)) || []\n\n  // If preflight\n  if (request.method === 'OPTIONS') {\n    return new Response('', { headers: headers(request) })\n  }\n\n  // If not authorized 401\n  if (token !== AUTH_TOKEN) {\n    return new Response(\n      JSON.stringify({\n        ok: false,\n        error: { message: 'Unauthorized' },\n      }),\n      {\n        status: 401,\n        headers: headers(request),\n      }\n    )\n  }\n\n  switch (`${request.method} /${api}/${param}`) {\n    case 'POST /api/upload': {\n      const { cid } = await importUpload(request)\n      const key = `${token}:${cid}`\n      if (!store.get(key)) {\n        const created = new Date()\n        store.set(key, {\n          cid: cid.toString(),\n          deals: { status: 'ongoing', deals: [] },\n          pin: {\n            cid: cid.toString(),\n            status: 'pinned',\n            created,\n          },\n          created,\n        })\n      }\n      const result = { ok: true, value: { cid: cid.toString() } }\n\n      return new Response(JSON.stringify(result), {\n        headers: headers(request),\n      })\n    }\n    case `GET /api/${param}`: {\n      const cid = CID.parse(param || '')\n      const value = store.get(`${token}:${cid}`)\n      const [status, result] = value\n        ? [200, { ok: true, value }]\n        : [\n            404,\n            {\n              ok: false,\n              error: { message: `NFT with a CID ${cid} not found` },\n            },\n          ]\n\n      return new Response(JSON.stringify(result), {\n        status,\n        headers: headers(request),\n      })\n    }\n    case `DELETE /api/${param}`: {\n      const cid = CID.parse(param || '')\n      store.delete(`${token}:${cid}`)\n      return new Response(JSON.stringify({ ok: true }), {\n        headers: headers(request),\n      })\n    }\n    default: {\n      const result = {\n        ok: false,\n        error: { message: `No such API endpoint ${url.pathname}` },\n      }\n\n      return new Response(JSON.stringify(result), {\n        status: 404,\n        headers: headers(request),\n      })\n    }\n  }\n}\n"],"names":["importDirectory","importBlob","Response","CID"],"mappings":"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"}