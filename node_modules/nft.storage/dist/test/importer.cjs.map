{"version":3,"file":"importer.cjs","sources":["../../test/importer.js"],"sourcesContent":["import { util as DagPB } from 'ipld-dag-pb'\nimport multicodec from 'multicodec'\nimport Multihash from 'multihashing-async'\nimport IPLD from 'ipld'\n// @ts-ignore\nimport InMemory from 'ipld-in-memory'\nimport importer from 'ipfs-unixfs-importer'\n\n/** @type {(T:typeof IPLD) => IPLD} */\nconst inMemory = InMemory\nconst { multihash } = Multihash\n\n/**\n * @typedef {import('ipfs-unixfs-importer').BlockAPI} BlockAPI\n * @implements {BlockAPI}\n */\nclass Block {\n  /**\n   * @param {Object} [options]\n   * @param {IPLD} [options.ipld]\n   * @param {typeof multihash} [options.mh]\n   */\n  constructor({ ipld = inMemory(IPLD), mh = multihash } = {}) {\n    this.ipld = ipld\n    this.mh = mh\n  }\n  /**\n   * @param {Uint8Array} bytes\n   * @param {{cid:import('ipfs-unixfs-importer').CID}} options\n   */\n  async put(bytes, { cid }) {\n    const multihash = this.mh.decode(cid.multihash)\n    const node = DagPB.deserialize(bytes)\n\n    await this.ipld.put(node, multicodec.DAG_PB, {\n      cidVersion: cid.version,\n      hashAlg: multihash.code,\n    })\n\n    return { cid, data: bytes }\n  }\n  /**\n   * @param {import('ipfs-unixfs-importer').CID} cid\n   * @param {any} options\n   */\n  async get(cid, options) {\n    const node = await this.ipld.get(cid, options)\n\n    if (node instanceof Uint8Array) {\n      return { cid, data: node }\n    } else {\n      return { cid, data: DagPB.serialize(node) }\n    }\n  }\n}\n\n/**\n *\n * @param {Uint8Array} content\n */\nexport const importBlob = async (content) => {\n  const results = importer([{ content }], new Block(), { onlyHash: true })\n  for await (const result of results) {\n    return result\n  }\n  throw new Error(`Import failed`)\n}\n\n/**\n * @param {File[]} files\n */\nexport const importDirectory = async (files) => {\n  const entries = files.map((file) => ({\n    // @ts-expect-error - webkitRelativePath is not known\n    path: file.webkitRelativePath || file.name,\n    // @ts-expect-error - file.stream() isn't typed as AsyncIterable.\n    content: /** @type {AsyncIterable<Uint8Array>} */ (file.stream()),\n  }))\n\n  const results = importer(entries, new Block(), {\n    onlyHash: true,\n    wrapWithDirectory: true,\n  })\n\n  let last = null\n  for await (const result of results) {\n    last = result\n  }\n\n  if (last != null) {\n    return last\n  } else {\n    throw new Error(`Import failed`)\n  }\n}\n"],"names":["DagPB"],"mappings":"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"}