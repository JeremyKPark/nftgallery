{"version":3,"file":"lib.cjs","sources":["../../src/lib.js"],"sourcesContent":["/**\n * A client library for the https://nft.storage/ service. It provides a convenient\n * interface for working with the [Raw HTTP API](https://nft.storage/#api-docs)\n * from a web browser or [Node.js](https://nodejs.org/) and comes bundled with\n * TS for out-of-the box type inference and better IntelliSense.\n *\n * @example\n * ```js\n * import { NFTStorage, File, Blob } from \"nft.storage\"\n * const client = new NFTStorage({ token: API_TOKEN })\n *\n * const cid = await client.storeBlob(new Blob(['hello world']))\n * ```\n * @module\n */\n\nimport * as API from './lib/interface.js'\nimport { fetch, File, Blob, FormData } from './platform.js'\n\n/**\n * @implements API.Service\n */\nclass NFTStorage {\n  /**\n   * Constructs a client bound to the given `options.token` and\n   * `options.endpoint`.\n   *\n   * @example\n   * ```js\n   * import { NFTStorage, File, Blob } from \"nft.storage\"\n   * const client = new NFTStorage({ token: API_TOKEN })\n   *\n   * const cid = await client.storeBlob(new Blob(['hello world']))\n   * ```\n   * Optionally you could pass an alternative API endpoint (e.g. for testing)\n   * @example\n   * ```js\n   * import { NFTStorage } from \"nft.storage\"\n   * const client = new NFTStorage({\n   *   token: API_TOKEN\n   *   endpoint: new URL('http://localhost:8080/')\n   * })\n   * ```\n   *\n   * @param {{token: string, endpoint?:URL}} options\n   */\n  constructor({ token, endpoint = new URL('https://nft.storage') }) {\n    /**\n     * Authorization token.\n     *\n     * @readonly\n     */\n    this.token = token\n    /**\n     * Service API endpoint `URL`.\n     * @readonly\n     */\n    this.endpoint = endpoint\n  }\n\n  /**\n   * @hidden\n   * @param {string} token\n   */\n  static auth(token) {\n    return { Authorization: `Bearer ${token}` }\n  }\n  /**\n   * @param {API.Service} service\n   * @param {Blob} blob\n   * @returns {Promise<API.CIDString>}\n   */\n  static async storeBlob({ endpoint, token }, blob) {\n    const url = new URL('/api/upload', endpoint)\n\n    const request = await fetch(url.toString(), {\n      method: 'POST',\n      headers: NFTStorage.auth(token),\n      body: blob,\n    })\n    const result = await request.json()\n\n    if (result.ok) {\n      return result.value.cid\n    } else {\n      throw new Error(result.error.message)\n    }\n  }\n  /**\n   * @param {API.Service} service\n   * @param {Iterable<File>} files\n   * @returns {Promise<API.CIDString>}\n   */\n  static async storeDirectory({ endpoint, token }, files) {\n    const url = new URL('/api/upload', endpoint)\n    const body = new FormData()\n    for (const file of files) {\n      body.append('file', file, file.name)\n    }\n\n    const response = await fetch(url.toString(), {\n      method: 'POST',\n      headers: NFTStorage.auth(token),\n      body,\n    })\n    const result = await response.json()\n\n    if (result.ok) {\n      return result.value.cid\n    } else {\n      throw new Error(result.error.message)\n    }\n  }\n\n  /**\n   * @param {API.Service} service\n   * @param {string} cid\n   * @returns {Promise<API.StatusResult>}\n   */\n  static async status({ endpoint, token }, cid) {\n    const url = new URL(`/api/${cid}`, endpoint)\n    const response = await fetch(url.toString(), {\n      method: 'GET',\n      headers: NFTStorage.auth(token),\n    })\n    const result = await response.json()\n\n    if (result.ok) {\n      return {\n        cid: result.value.cid,\n        deals: result.value.deals,\n        size: result.value.size,\n        pin: result.value.pin,\n        created: new Date(result.value.created),\n      }\n    } else {\n      throw new Error(result.error.message)\n    }\n  }\n\n  /**\n   * @param {API.Service} service\n   * @param {string} cid\n   * @returns {Promise<void>}\n   */\n  static async delete({ endpoint, token }, cid) {\n    const url = new URL(`/api/${cid}`, endpoint)\n    const response = await fetch(url.toString(), {\n      method: 'DELETE',\n      headers: NFTStorage.auth(token),\n    })\n    const result = await response.json()\n    if (!result.ok) {\n      throw new Error(result.error.message)\n    }\n  }\n\n  // Just a sugar so you don't have to pass around endpoint and token around.\n\n  /**\n   * Stores a single file and returns the corresponding Content Identifier (CID).\n   * Takes a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)\n   * or a [File](https://developer.mozilla.org/en-US/docs/Web/API/File). Note\n   * that no file name or file metadata is retained.\n   *\n   * @example\n   * ```js\n   * const content = new Blob(['hello world'])\n   * const cid = await client.storeBlob(content)\n   * cid //> 'Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD'\n   * ```\n   *\n   * @param {Blob} blob\n   */\n  storeBlob(blob) {\n    return NFTStorage.storeBlob(this, blob)\n  }\n  /**\n   * Stores a directory of files and returns a CID for the directory.\n   *\n   * @example\n   * ```js\n   * const cid = client.storeDirectory([\n   *   new File(['hello world'], 'hello.txt'),\n   *   new File([JSON.stringify({'from': 'incognito'}, null, 2)], 'metadata.json')\n   * ])\n   * cid //>\n   * ```\n   *\n   * Argument can be a [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList)\n   * instance as well, in which case directory structure will be retained.\n   *\n   * @param {Iterable<File>} files\n   */\n  storeDirectory(files) {\n    return NFTStorage.storeDirectory(this, files)\n  }\n  /**\n   * Returns current status of the stored content by its CID.\n   * @example\n   * ```js\n   * const status = await client.status('Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD')\n   * ```\n   *\n   * @param {string} cid\n   */\n  status(cid) {\n    return NFTStorage.status(this, cid)\n  }\n  /**\n   * Removes stored content by its CID from the service.\n   *\n   * > Please note that even if content is removed from the service other nodes\n   * that have replicated it might still continue providing it.\n   *\n   * @example\n   * ```js\n   * await client.delete('Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD')\n   * ```\n   *\n   * @param {string} cid\n   */\n  delete(cid) {\n    return NFTStorage.delete(this, cid)\n  }\n}\n\nexport { NFTStorage, File, Blob, FormData }\n\n/**\n * Just to verify API compatibility.\n * @type {API.API}\n */\nconst api = NFTStorage\nvoid api\n"],"names":["fetch","FormData"],"mappings":"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"}