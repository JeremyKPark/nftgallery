{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; // Requests\n\nimport client from \"data\"; // GraphQL requests\n\nimport { ZORA_MEDIA_BY_ID } from \"@data/queries\"; // GraphQL Queries\n\n/**\n * Collect Zora media post by ID\n * @param {Number} id post number\n * @returns {Object} containing Zora media details\n */\n\nexport var getPostByID = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var post, metadata, text;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.request(ZORA_MEDIA_BY_ID(id));\n\n          case 2:\n            post = _context.sent;\n            post = post.media; // Collect post metadata\n\n            _context.next = 6;\n            return axios.get(post.metadataURI);\n\n          case 6:\n            metadata = _context.sent;\n            post.metadata = metadata.data; // If text media, collect post content\n\n            if (!metadata.data.mimeType.startsWith(\"text\")) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 11;\n            return axios.get(post.contentURI);\n\n          case 11:\n            text = _context.sent;\n            post.contentURI = text.data;\n\n          case 13:\n            return _context.abrupt(\"return\", post);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getPostByID(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}